@model DentistApp.Application.ViewModels.VisitInfoForIndexListVM
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager

@{
    ViewData["Title"] = "Index";
}

<h1>All visits</h1>

@if (signInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Secretary")))
{
    <p>
        <a class="btn btn-outline-primary" asp-action="Create">Create New</a>
    </p>
}
    <form asp-action="Index" method="get" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row align-items-end">
            <div class="form-group col-auto">
                <label asp-for="DateMin" class="control-label"></label>
                <input type="date" name="dateMin" asp-for="DateMin" class="form-control" />
                <span asp-validation-for="DateMin" class="text-danger"></span>
            </div>
            <div class="form-group col-auto">
                <label asp-for="DateMax" class="control-label"></label>
                <input type="date" name="dateMax" asp-for="DateMax" class="form-control"  />
                <span asp-validation-for="DateMax" class="text-danger"></span>
            </div>
            <div class="form-group col-auto">
                <label asp-for="DentistId" class="control-label"></label>
                <select name="dentistId" asp-for="DentistId" asp-items="Model.Dentists" class="form-control"></select>
            </div>
            <div class="form-group col-auto">
                <label asp-for="InFuture" class="control-label"></label>
                <input asp-for="InFuture" style="outline:none; border:hidden; box-shadow:none" class="form-control" />
            </div>

            <div class="form-group col-auto">
                <input type="submit" value="Filter" class="btn btn-primary" />
            </div>
            <div class="form-group col-auto">
                <a asp-action="Index" class="btn btn-primary">Clear filter</a>
            </div>
        </div>
    </form>

    <div class="dropdown mb-2">
        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            sort
        </button>
        <div class="dropdown-menu">

            <div class="row">
                <div class="col-sm">
                    <a class="dropdown-item-text" style="color:dimgray">visit date</a>
                </div>

                <div class="col-auto">
                    <a class="dropdown-item" asp-action="Index" asp-route-sortOrder=""
                       asp-route-dateMin="@Model.DateMin.ToString("yyyy-MM-dd")"
                       asp-route-dateMax="@Model.DateMax.ToString("yyyy-MM-dd")"
                       asp-route-dentistId="@Model.DentistId"
                       asp-route-inFuture="@Model.InFuture">ascending</a>
                    <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="descending"
                       asp-route-dateMin="@Model.DateMin.ToString("yyyy-MM-dd")"
                       asp-route-dateMax="@Model.DateMax.ToString("yyyy-MM-dd")"
                       asp-route-dentistId="@Model.DentistId"
                       asp-route-inFuture="@Model.InFuture">descending</a>
                </div>
            </div>
        </div>
    </div>


    @{var displayMessage = Model.Visits.Any() ? "display:none" : ""; }

    <div class="alert alert-danger" style="@displayMessage" role="alert">
        <h4 class="alert-heading">Ajjjj karamba!</h4>
        <p>No visits with this filter</p>
        <hr>
        <p class="mb-0"></p>
    </div>


    @foreach (var d in Model.PaginatedDates)
    {
        <h4 class="border border-primary p-3 text-center" style="background-color:whitesmoke; color:cornflowerblue">
            @{ var day = d.ToString("dd MMMM yyyy");
                @Html.DisplayFor(modelItem => day)}
        </h4>
        <table class="table">
            <thead>
                <tr>
                    <th class="col" style="width:10%">
                        Time
                    </th>
                    <th class="col" style="width:15%">
                        Status
                    </th>
                    <th class="col" style="width:25%">
                        Patient
                    </th>
                    <th class="col" style="width:25%">
                        Dentist
                    </th>
                    <th class="col" style="width:25%"></th>
                </tr>
            </thead>
            @foreach (var v in Model.Visits)
            {
                if (v.VisitDate.Date == d.Date)
                {
                    <tbody>
                        <tr>
                            <td>
                                @{ var timeofday = v.VisitDate.ToString("HH:mm");
                                    @Html.DisplayFor(modelItem => timeofday)}
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => v.VisitStatus)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => v.Patient.FullName) 
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => v.Dentist.FullName) 
                            </td>
                            <td>
                                <a class="btn btn-primary" asp-action="Details" asp-route-id="@v.Id">Details</a>
                                @if (signInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Secretary")))
                                {<a class="btn btn-primary" asp-action="Edit" asp-route-id="@v.Id">Edit</a>
                                    var isAvailable = (v.VisitDate < DateTime.Now) || (v.VisitStatus.ToString() == "Canceled") ? "display:none" : "";

                                    <a style="@isAvailable" class="btn btn-primary" asp-action="Cancel" asp-route-id="@v.Id">Cancel</a>}

                            </td>
                        </tr>
                    </tbody>

                }
            }

        </table>
    }

    @{
        var prevDisabled = !Model.PaginatedDates.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.PaginatedDates.HasNextPage ? "disabled" : "";


        <div>
            <input type="hidden" asp-for="DateMin" value="@Model.DateMin" />
            <input type="hidden" asp-for="DateMax" value="@Model.DateMax" />
            <input type="hidden" asp-for="DentistId" value="@Model.DentistId" />
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PaginatedDates.PageIndex - 1)"
               asp-route-dateMin="@Model.DateMin.ToString("yyyy-MM-dd")"
               asp-route-dateMax="@Model.DateMax.ToString("yyyy-MM-dd")"
               asp-route-dentistId="@Model.DentistId"
               asp-route-inFuture="@Model.InFuture"
               asp-route-sortOrder="@Model.SortOrder"
               class="btn btn-dark @prevDisabled" id="previous">
                previous
            </a>
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PaginatedDates.PageIndex + 1)"
               asp-route-dateMin="@Model.DateMin.ToString("yyyy-MM-dd")"
               asp-route-dateMax="@Model.DateMax.ToString("yyyy-MM-dd")"
               asp-route-dentistId="@Model.DentistId"
               asp-route-inFuture="@Model.InFuture"
               asp-route-sortOrder="@Model.SortOrder"
               class="btn btn-dark @nextDisabled" id="next">
                next
            </a>
        </div>
    }